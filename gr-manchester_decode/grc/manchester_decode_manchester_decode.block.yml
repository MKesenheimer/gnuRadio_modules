id: manchester_decode
label: Manchester decode
flags: [python, cpp]
category: '[Symbol Coding]'

parameters:
- id: type
  label: Input type
  dtype: enum
  options: [byte, float, int, short]
  option_attributes:
    fcn: [b, f, i, s]
  hide: part

inputs:
- label: in
  domain: stream
  dtype: ${type}

outputs:
- label: out
  domain: stream
  dtype: byte

asserts:
- ${ samples_per_symbol > 1 }

#cpp_templates:
#    includes: ['#include <gnuradio/blocks/min_blk.h>']
#    declarations: 'blocks::min_${type.fcn}::sptr ${id};'
#    make: 'this->${id} = blocks::min_${type.fcn}::make(${vlen},${vlen_out});'

templates:
    imports: from gnuradio.manchester_decode import *
    make: manchester_decode_${type.fcn}()

file_format: 1
