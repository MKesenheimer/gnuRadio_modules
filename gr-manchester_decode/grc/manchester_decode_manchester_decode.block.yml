id: manchester_decode
label: Manchester decode
flags: [python, cpp]
category: '[Symbol Coding]'

templates:
  imports: import manchester_decode
  make: manchester_decode.manchester_decode(${samples_per_symbol}, ${message_length})

parameters:
- id: samples_per_symbol
  label: samples per symbol
  dtype: int
  default: '4'
- id: message_length
  label: message length
  dtype: int
  default: '38'

inputs:
- label: in
  domain: stream
  dtype: float

outputs:
- label: out
  domain: stream
  dtype: byte

asserts:
- ${ samples_per_symbol > 1 }
- ${ message_length > 0 }

#cpp_templates:
#    includes: ['#include <gnuradio/blocks/min_blk.h>']
#    declarations: 'blocks::min_${type.fcn}::sptr ${id};'
#    make: 'this->${id} = blocks::min_${type.fcn}::make(${vlen},${vlen_out});'

file_format: 1
